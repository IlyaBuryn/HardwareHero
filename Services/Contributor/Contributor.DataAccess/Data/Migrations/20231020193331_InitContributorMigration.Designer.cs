// <auto-generated />
using System;
using Contributor.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Contributor.DataAccess.Data.Migrations
{
    [DbContext(typeof(ContributorDbContext))]
    [Migration("20231020193331_InitContributorMigration")]
    partial class InitContributorMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChatRoomContributorModel", b =>
                {
                    b.Property<Guid>("ChatRoomsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParticipantsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ChatRoomsId", "ParticipantsId");

                    b.HasIndex("ParticipantsId");

                    b.ToTable("ChatRoomContributorModel");
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChatRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEdited")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 20, 22, 33, 31, 630, DateTimeKind.Local).AddTicks(3132));

                    b.HasKey("Id");

                    b.HasIndex("ChatRoomId");

                    b.HasIndex("SenderId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.ChatRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("TimeStamp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("10/20/2023 22:33:31");

                    b.HasKey("Id");

                    b.ToTable("ChatRooms");
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.ContributorConfirmInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 20, 22, 33, 31, 631, DateTimeKind.Local).AddTicks(8213));

                    b.HasKey("Id");

                    b.ToTable("ContributorConfirmInfos");
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.ContributorExcellence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainApiLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainWebLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("RegionId");

                    b.ToTable("ContributorExcellences");
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.ContributorModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContributorConfirmInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContributorExcellenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubscriptionPlanInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContributorConfirmInfoId")
                        .IsUnique()
                        .HasFilter("[ContributorConfirmInfoId] IS NOT NULL");

                    b.HasIndex("ContributorExcellenceId")
                        .IsUnique()
                        .HasFilter("[ContributorExcellenceId] IS NOT NULL");

                    b.HasIndex("SubscriptionPlanInfoId")
                        .IsUnique()
                        .HasFilter("[SubscriptionPlanInfoId] IS NOT NULL");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Contributors", (string)null);
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.SubscriptionPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DaysCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(30);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("PriorityLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionPlans");
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.SubscriptionPlanInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 19, 22, 33, 31, 633, DateTimeKind.Local).AddTicks(887));

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RenewalDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 20, 22, 33, 31, 633, DateTimeKind.Local).AddTicks(399));

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("SubscriptionPlanInfos");
                });

            modelBuilder.Entity("ChatRoomContributorModel", b =>
                {
                    b.HasOne("HardwareHero.Services.Shared.Models.Contributor.ChatRoom", null)
                        .WithMany()
                        .HasForeignKey("ChatRoomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HardwareHero.Services.Shared.Models.Contributor.ContributorModel", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.ChatMessage", b =>
                {
                    b.HasOne("HardwareHero.Services.Shared.Models.Contributor.ChatRoom", "ChatRoom")
                        .WithMany("ChatMessages")
                        .HasForeignKey("ChatRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HardwareHero.Services.Shared.Models.Contributor.ContributorModel", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatRoom");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.ContributorExcellence", b =>
                {
                    b.HasOne("HardwareHero.Services.Shared.Models.Contributor.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("HardwareHero.Services.Shared.Models.Contributor.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.ContributorModel", b =>
                {
                    b.HasOne("HardwareHero.Services.Shared.Models.Contributor.ContributorConfirmInfo", "ContributorConfirmInfo")
                        .WithMany()
                        .HasForeignKey("ContributorConfirmInfoId");

                    b.HasOne("HardwareHero.Services.Shared.Models.Contributor.ContributorExcellence", "ContributorExcellence")
                        .WithMany()
                        .HasForeignKey("ContributorExcellenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HardwareHero.Services.Shared.Models.Contributor.SubscriptionPlanInfo", "SubscriptionPlanInfo")
                        .WithMany()
                        .HasForeignKey("SubscriptionPlanInfoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ContributorConfirmInfo");

                    b.Navigation("ContributorExcellence");

                    b.Navigation("SubscriptionPlanInfo");
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.SubscriptionPlanInfo", b =>
                {
                    b.HasOne("HardwareHero.Services.Shared.Models.Contributor.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("HardwareHero.Services.Shared.Models.Contributor.ChatRoom", b =>
                {
                    b.Navigation("ChatMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
