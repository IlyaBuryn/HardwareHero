version: '3.4'

networks:
  backend:
  frontend:
     
services:  

  aggregator.api:
    container_name: Aggregator-api
    image: ${DOCKER_REGISTRY-}aggregatorapi
    volumes:
      - ./../Aggregator.DataAccess/Scripts:/root/app
    build:
      context: .
      dockerfile: Services/Aggregator/Aggregator.Api/Dockerfile
    networks:
      - backend
    environment:
      - DB_HOST=hardwarehero.mssql
      - DB_NAME=HardwareHero.AggregatorDb
      - DB_SA_PASSWORD=password@#12345

  contributor.api:
    container_name: Contributor-api
    image: ${DOCKER_REGISTRY-}contributorapi
    volumes:
      - ./../Contributor.DataAccess/Scripts:/root/app
    build:
      context: .
      dockerfile: Services/Contributor/Contributor.Api/Dockerfile
    networks:
      - backend
    environment:
      - DB_HOST=hardwarehero.mssql
      - DB_NAME=HardwareHero.ContributorDb
      - DB_SA_PASSWORD=password@#12345

  hardwarehero.mssql:
    container_name: HardwareHero-mssql
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=password@#12345
    volumes_from:
      - aggregator.api
    networks:
      - backend
    ports:
      - 8080:1433
 
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    networks:
      - backend
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka1:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    networks:
      - backend
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092,EXTERNAL://kafka1:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9100:8080
    networks:
      - backend
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_JMXPORT: 9997
    depends_on:
      - kafka1
  
  #react.client:
  #  container_name: React-app
  #  image: client
  #  stdin_open: true
  #  build:
  #    context: ../HardwareHero.UI/web
  #    dockerfile: Dockerfile
  #  volumes:
  #    - "../HardwareHero.UI/web:/app:delegated"
  #    - /app/node_modules/
  #  environment:
  #    - CHOKIDAR_USEPOLLING=true
  #  ports:
  #    - 5173:5173
  #  networks:
  #    - frontend


  #hardwarehero.mongo:
  #  container_name: HardwareHero-mongo
  #  image: mongo
  #  ports:
  #    - 8090:27017
  #  networks:
  #    - backend

  #apigateway.ocelot:
  #  container_name: HardwareHero-apiGateway
  #  image: ${DOCKER_REGISTRY-}apigatewayocelot
  #  build:
  #    context: .
  #    dockerfile: ApiGateway/ApiGateway.Ocelot/Dockerfile
  #  ports:
  #    - 8071:80
  #    - 8070:443
  #  networks:
  #    - backend

  #configurator.api:
  #  container_name: Configurator-api
  #  image: ${DOCKER_REGISTRY-}configuratorapi
  #  build:
  #    context: .
  #    dockerfile: Services/Configurator/Configurator.Api/Dockerfile
  #  depends_on:
  #    - hardwarehero.mongo
  #  networks:
  #    - backend
  #  environment:
  #    - DB_HOST=hardwarehero.mongo
  #    - DB_NAME=Configurator

  #prices.api:
  #  container_name: Prices-api
  #  image: ${DOCKER_REGISTRY-}pricesapi
  #  build:
  #    context: .
  #    dockerfile: Services/Prices/Prices.Api/Dockerfile
  #  depends_on:
  #    - hardwarehero.mongo
  #  networks:
  #    - backend
  #  environment:
  #    - DB_HOST=hardwarehero.mongo
  #    - DB_NAME=Prices

  #mail.api:
  #  container_name: Mail-api
  #  image: ${DOCKER_REGISTRY-}mailapi
  #  build:
  #    context: .
  #    dockerfile: Services/Mail/Mail.Api/Dockerfile
  #  depends_on:
  #    - hardwarehero.mongo
  #  networks:
  #    - backend
  #  environment:
  #    - DB_HOST=hardwarehero.mongo
  #    - DB_NAME=Mail

  #usermanagement.api:
  #  container_name: Users-api
  #  image: ${DOCKER_REGISTRY-}usermanagementapi
  #  build:
  #    context: .
  #    dockerfile: Services/Identity/UserManagement.Api/Dockerfile
  #  depends_on:
  #    - hardwarehero.mssql
  #  networks:
  #    - backend
  #  environment:
  #    - DB_HOST=hardwarehero.mssql
  #    - DB_NAME=HardwareHero.Users
  #    - DB_SA_PASSWORD=password@#12345

  #identityserver:
  #  container_name: IdentityServer
  #  image: ${DOCKER_REGISTRY-}identityserver
  #  build:
  #    context: .
  #    dockerfile: Services/Identity/IdentityServer/Dockerfile
  #  depends_on:
  #    - hardwarehero.mssql
  #    #- usermanagement.api
  #  networks:
  #    - backend
  #  environment:
  #    - DB_HOST=hardwarehero.mssql
  #    - DB_NAME=HardwareHero.IdentityServer
  #    - DB_SA_PASSWORD=password@#12345
  #    - SEED=/seed

  #proxy:
  #  container_name: Nginx-proxy
  #  image: nginx:mainline
  #  networks:
  #    - backend
  #    - frontend

volumes:
  zookeeper_data:
    driver: local

  kafka_data:
    driver: local

  shared-scripts:  