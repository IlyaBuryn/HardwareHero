version: '3.4'

networks:
  backend:
  frontend:
    
services:
  
  react.client:
    container_name: React-app
    image: client
    stdin_open: true
    build:
      context: ../HardwareHero.UI/web
      dockerfile: Dockerfile
    volumes:
      - "../HardwareHero.UI/web:/app:delegated"
      - /app/node_modules/
    ports:
      - 3000:3000
    networks:
      - frontend

  hardwarehero.mssql:
    container_name: HardwareHero-mssql
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=password@#12345
    networks:
      - backend
    ports:
      - 8080:1433

  hardwarehero.mongo:
    container_name: HardwareHero-mongo
    image: mongo
    ports:
      - 8090:27017
    networks:
      - backend

  apigateway.ocelot:
    container_name: HardwareHero-apiGateway
    image: ${DOCKER_REGISTRY-}apigatewayocelot
    build:
      context: .
      dockerfile: ApiGateway/ApiGateway.Ocelot/Dockerfile
    ports:
      - 8070:80
    networks:
      - backend

  aggregator.api:
    container_name: Aggregator-api
    image: ${DOCKER_REGISTRY-}aggregatorapi
    volumes:
      - ./addfiles:/root/app
    build:
      context: .
      dockerfile: Services/Aggregator/Aggregator.Api/Dockerfile
    depends_on:
      - hardwarehero.mssql
    networks:
      - backend
    environment:
      - DB_HOST=hardwarehero.mssql
      - DB_NAME=HardwareHero.AggregatorDb
      - DB_SA_PASSWORD=password@#12345

  contributor.api:
    container_name: Contributor-api
    image: ${DOCKER_REGISTRY-}contributorapi
    build:
      context: .
      dockerfile: Services/Contributor/Contributor.Api/Dockerfile
    depends_on:
      - hardwarehero.mssql
    networks:
      - backend
    environment:
      - DB_HOST=hardwarehero.mssql
      - DB_NAME=HardwareHero.ContributorDb
      - DB_SA_PASSWORD=password@#12345

  configurator.api:
    container_name: Configurator-api
    image: ${DOCKER_REGISTRY-}configuratorapi
    build:
      context: .
      dockerfile: Services/Configurator/Configurator.Api/Dockerfile
    depends_on:
      - hardwarehero.mongo
    networks:
      - backend
    environment:
      - DB_HOST=hardwarehero.mongo
      - DB_NAME=Configurator

  prices.api:
    container_name: Prices-api
    image: ${DOCKER_REGISTRY-}pricesapi
    build:
      context: .
      dockerfile: Services/Prices/Prices.Api/Dockerfile
    depends_on:
      - hardwarehero.mongo
    networks:
      - backend
    environment:
      - DB_HOST=hardwarehero.mongo
      - DB_NAME=Prices

  mail.api:
    container_name: Mail-api
    image: ${DOCKER_REGISTRY-}mailapi
    build:
      context: .
      dockerfile: Services/Mail/Mail.Api/Dockerfile
    depends_on:
      - hardwarehero.mongo
    networks:
      - backend
    environment:
      - DB_HOST=hardwarehero.mongo
      - DB_NAME=Mail

  usermanagement.api:
    container_name: Users-api
    image: ${DOCKER_REGISTRY-}usermanagementapi
    build:
      context: .
      dockerfile: Services/Identity/UserManagement.Api/Dockerfile
    depends_on:
      - hardwarehero.mssql
    networks:
      - backend
    environment:
      - DB_HOST=hardwarehero.mssql
      - DB_NAME=HardwareHero.Users
      - DB_SA_PASSWORD=password@#12345

  identityserver:
    container_name: IdentityServer
    image: ${DOCKER_REGISTRY-}identityserver
    build:
      context: .
      dockerfile: Services/Identity/IdentityServer/Dockerfile
    depends_on:
      - hardwarehero.mssql
      - usermanagement.api
    networks:
      - backend
    ports:
      - 5000:80
    environment:
      - DB_HOST=hardwarehero.mssql
      - DB_NAME=HardwareHero.IdentityServer
      - DB_SA_PASSWORD=password@#12345
      - SEED=/seed

  proxy:
    container_name: Nginx-proxy
    image: nginx:mainline
    networks:
      - backend
      - frontend